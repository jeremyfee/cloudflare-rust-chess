/*
 * Chess API
 *
 * api for chess game
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct RequestCreateChallenge {
    #[serde(rename = "opponent", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub opponent: Option<Option<String>>,
    #[serde(rename = "playAs", skip_serializing_if = "Option::is_none")]
    pub play_as: Option<crate::models::PieceColor>,
}

impl RequestCreateChallenge {
    pub fn new() -> RequestCreateChallenge {
        RequestCreateChallenge {
            opponent: None,
            play_as: None,
        }
    }
}


